Grafikart
Mise en Pratique de la POO en PHP
https://www.grafikart.fr/formations/mise-pratique-poo
2017

I - But:
(https://www.grafikart.fr/tutoriels/introduction-1082)
Création d'un blog listant des news avec catégorie
Mise en place d'une pagination
Back Office accessible à un utilisateur authentitifé
Formulaire de contact
Boutique

Structure modulaire : des modules pourront être activés ou désactivés si besoin

=========================================================================================================
II - Structure du projet
(https://www.grafikart.fr/tutoriels/structure-projet-918)

Préparation de l'environnement
==============================
[ ] composer init
[ ] composer req phpunit/phpunit --dev
[ ] composer req guzzlehttp/psr7
[ ] composer req http-interop/response-sender
[?] composer req squizlabs/php_codesniffer
	[ ] y placer le code Example 5.1 Composing a Test Suite Using XML Configuration sur
	(https://phpunit.readthedocs.io/en/8.3/organizing-tests.html#composing-a-test-suite-using-xml-configuration)
[ ] Créer un fichier phpunit.xml à la racine
	[ ] le remplir comme la doc le stipule 
	(https://github.com/squizlabs/PHP_CodeSniffer/wiki/Annotated-Ruleset)
[ ] Créer un fichier phpcs à la racine 

[ ] git init
[ ] Créer un .gitignore, y placer vendor, composer.lock et ce qu'on veut d'autre

[ ] Ajouter un nouvel autoloader au composer.json
	[ ] le namespace "Framework\" pointera vers le dossier "src/Framework"
	[ ] composer dump-autoload

Préparation de la structure de fichiers
=======================================
[ ] Créer un dossier public
[ ] Créer un fichier public/index.php
	[ ] y importer l'autoloader de composer

[ ] Créer la classe Framework\App (src/Framework/App.php)
	[ ] Créer une méthode Framework\App::run()
	[ ] Framework\App:run prend en paramètre une ServerRequestInterface 
	[ ] Framework\App:run renvoie une ResponseInterface
[ ] Préparer la structure de tests correspondante
	[ ] Dossier tests/Framework et classe AppTest  
[ ] Instancier Framework\App dans public/index.php
[ ] Lancer la méthode Framework\App::run()
[ ] Préparer 

N'accepter que des url sans / final
===================================
[?] Récupérer l'url appelée
[?] Tester si l'url finit par un /
[?] Rediriger en 301 si oui.




Actions pré-commit et commit (à refaire régulièrement)
============================
[ ] Lancer les tests ./vendor/bin/phpunit
[ ] Lancer le code sniffer ./vendor/bin/phpcs
[ ] git status
[ ] git add .
[ ] git commit -m "Premier message"






